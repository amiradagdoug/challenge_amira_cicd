name: Node.js CI/CD staging

on:
  push:
    branches:
      - main
    tags: 
      - '*\.*\.*' 
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Build the docker image
        run: docker build -t nodejs-image_amira .
         
      
      - name: Push image to Docker Hub
        run: |
            docker tag nodejs-image_amira ${{ secrets.DOCKER_USERNAME }}/nodejs-image_amira:latest
            docker push ${{secrets.DOCKER_USERNAME }}/nodejs-image_amira:latest
       
      - name: Print Git Ref
        run: |
            echo "Current Git Ref: ${{ github.ref }}"

  test:
    needs:  build
    runs-on: ubuntu-latest 

    steps: 
        - name: checkout repo
          uses: actions/checkout@v3
        - name: use node.js
          uses: actions/setup-node@v3
          with:
             node-version: '18.x'
        - run: npm install
        - run: echo Running Jest Unit tests
        - run: npm install
                  
        - name: Upload test report Artefact
          if: always()
          uses: actions/upload-artifact@v1
          with:
            name: test-report  
            path: test-report.xml

  staging:
    runs-on: ubuntu-latest
    needs: test
    if:  github.ref == 'refs/heads/main'
   
    steps:
      - name: Checkout repository 
        uses: actions/checkout@v2 

      - name: Install dependencies
        run: npm install

      - name: Deploy to Staging
        run: |
         sudo docker pull ${{ secrets.DOCKER_USERNAME }}/nodejs-image_amira:latest
         sudo docker stop nodejs-image_amira || true
         sudo docker rm nodejs-image_amira || true
         sudo docker run -d -p 3003:3000 --name=nodejs-image_amira ${{ secrets.DOCKER_USERNAME }}/nodejs-image_amira:latest
         sudo docker ps

  create-GitHub-Release:

    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    
    steps:
      - name: Parse release version from git tag
        run: echo "release-version=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Print out parsed release version
        run: echo Parsed release version is:${GITHUB_REF#refs/*/}
   
      - name: Create GitHub Release
        run: echo Parsed release version is:${GITHUB_REF#refs/*/}


  deploy:
    runs-on: ubuntu-latest
    needs: staging 
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Deploy to Production  
        run: |
         sudo docker pull ${{ secrets.DOCKER_USERNAME }}/nodejs-image_amira:latest
         sudo docker stop nodejs-image_amira || true
         sudo docker rm nodejs-image_amira || true
         sudo docker run -d -p 3003:3000 --name=nodejs-image_amira ${{ secrets.DOCKER_USERNAME }}/nodejs-image_amira:latest
         sudo docker ps
